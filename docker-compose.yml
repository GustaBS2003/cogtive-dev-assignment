# Cogtive Industrial IoT Platform - Docker Compose Configuration
# This docker-compose file sets up the entire development environment for the Cogtive technical challenge

version: '3.8'

services:
  # PostgreSQL Database (optional for senior level)
  postgres:
    image: postgres:15
    container_name: cogtive-postgres
    environment:
      POSTGRES_DB: cogtive
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 440332
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cogtive-net

  # Backend API (.NET Core)
  cogtive-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cogtive-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DATABASE_PROVIDER=Postgres
      - ConnectionStrings__PostgresConnection=Host=postgres;Port=5432;Database=cogtive;Username=postgres;Password=440332
    ports:
      - "5211:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cogtive-net

  # Frontend React Web App
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: cogtive-web
    ports:
      - "3000:80"
    depends_on:
      - cogtive-api
    environment:
      - REACT_APP_API_BASE=http://localhost:5211
    networks:
      - cogtive-net

  # Optional IoT simulator service (for senior level challenge)
  # Uncomment and implement to simulate IoT devices sending data
  iot-simulator:
    build:
      context: ./iot-simulator
      dockerfile: Dockerfile
    container_name: cogtive-iot-simulator
    environment:
      - API_ENDPOINT=http://cogtive-api:80/api/production-data
      - SEND_INTERVAL_MS=10000
    depends_on:
      - cogtive-api
    networks:
      - cogtive-net

volumes:
  postgres-data:
    driver: local

networks:
  cogtive-net:
    driver: bridge
